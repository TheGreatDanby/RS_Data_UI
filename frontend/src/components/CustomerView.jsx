/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/jYDbFAEiPiu
 */
import { useNavigate } from "react-router-dom";
import { useParams } from "react-router-dom"; // If using React Router and customerId is in the URL
import { useEffect, useState } from "react";

import { Button } from "@/components/ui/button";
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card";
import { ProgressBar } from "./ProgressBar";
import CustomerDetailsCard from "./CustomerDetailsCard";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "@/components/ui/select";

import TicketTableSmall from "./TicketTableSmall";
import InvoiceTableSmall from "./InvoiceTableSmall";
import EstimateTableSmall from "./EstimateTableSmall";

export function CustomerView({ customerData }) {
  // customerData is passed on from the  <CustomerDetailPage/>
  const navigate = useNavigate();
  const [isLoading, setIsLoading] = useState(false); // Loading state
  const { customerId } = useParams(); // If customerId is in the URL
  const [selectedValue, setSelectedValue] = useState("");

  const navigateToPage = (value) => {
    navigate(`/${value}/new`);
  };

  // Example function to handle selection changes
  const handleSelectChange = (value) => {
    setSelectedValue(value);
    navigateToPage(value);
  };

  // useEffect(() => {
  //   const fetchTicketData = async () => {
  //     setIsLoading(true); // Start loading

  //     try {
  //       const response = await fetchTicketsByCustomerId(customerId);
  //       setTickets(response.tickets);
  //     } catch (error) {
  //       console.error(error); // Log or handle the error as needed
  //     }

  //     setIsLoading(false); // Data loaded or failed, stop loading
  //   };

  //   fetchTicketData();
  // }, [customerId]);

  return (
    <div className="grid min-h-screen w-full lg:grid-cols-[1fr_2fr] gap-6 p-6 bg-gray-200">
      <span>CustomerView.jsx</span>
      <header className="col-span-full flex justify-between items-center mb-6">
        <h1
          className="text-3xl font-bold"
          // onClick={() => navigate(`/customers/${customerData.id}`)}
        >
          {customerData.fullname}
        </h1>
        <div className="flex gap-4">
          <Select onValueChange={handleSelectChange}>
            <SelectTrigger
              className="text-white bg-green-600 hover:bg-green-800"
              id="actions"
            >
              <SelectValue placeholder="Add New" />
            </SelectTrigger>
            <SelectContent position="popper">
              <SelectItem value="tickets">Ticket</SelectItem>
              <SelectItem value="invoices">Invoice</SelectItem>
              <SelectItem value="estimates">Estimate</SelectItem>
            </SelectContent>
          </Select>
          <Button
            className="bg-amber-600	"
            onClick={() => navigate(`/customers/edit/${customerData.id}`)}
          >
            Edit
          </Button>
        </div>
      </header>
      <div className="flex flex-col gap-6">
        <CustomerDetailsCard customerData={customerData} />

        <Card className="bg-red-200	">
          <CardHeader>
            <CardTitle>Additional Details</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-2">
              <div className="font-medium text-lg">
                Account Number: 123456789
              </div>
              <div className="text-sm text-gray-500 dark:text-gray-400">
                Membership Status: Active
              </div>
              <div className="text-sm text-gray-500 dark:text-gray-400">
                Notes: Regular customer
              </div>
            </div>
          </CardContent>
        </Card>
        <Card className="bg-red-200	">
          <CardHeader>
            <CardTitle>Summary</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-2">
              <div className="font-medium text-lg">Open Tickets: 2</div>
              <div className="font-medium text-lg">Closed Tickets: 1</div>
              <div className="font-medium text-lg">Open Invoices: 1</div>
              <div className="font-medium text-lg">Paid Invoices: 1</div>
              <div className="font-medium text-lg">
                Total Amount Invoiced: $39.98
              </div>
              <div className="font-medium text-lg">Customer Rating: 4.5/5</div>
            </div>
          </CardContent>
        </Card>
      </div>
      <div className="flex flex-col gap-6">
        {isLoading ? (
          <ProgressBar loading={isLoading} />
        ) : (
          <>
            {/* <TicketTableSmall ticketData={tickets} /> */}
            <TicketTableSmall customerId={customerData.id} />

            <InvoiceTableSmall customerId={customerData.id} />

            <EstimateTableSmall customerId={customerData.id} />
          </>
        )}
      </div>
    </div>
  );
}
