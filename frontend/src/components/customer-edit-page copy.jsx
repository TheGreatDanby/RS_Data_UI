/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/kUC9CxtcRig
 */

import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { fetchCustomerById } from "@/api/customerAPI";
import { useParams } from "react-router-dom";

export function CustomerEditPage() {
  const { customerId } = useParams();
  const [customer, setCustomer] = useState(null);
  const [error, setError] = useState(null); // Define the error state

  // const [loading, setLoading] = useState(false);

  useEffect(() => {
    // setLoading(true);
    fetchCustomerById(customerId)
      .then((data) => {
        console.log("Fetched customer data:", data); // Debug log

        setCustomer(data.customer);
        // setLoading(false);
      })
      .catch((err) => {
        console.error(`Error fetching customer with ID ${customerId}:`, err);
        setError(err.message); // Store the error message
        // setLoading(false);
      });
  }, [customerId]);
  console.log("ðŸš€ ~ //useEffect ~ customer-edit customerId:", customerId);

  if (error) {
    return <div>Error: {error}</div>; // Render error message if there is an error
  }

  if (!customer) {
    // Render loading state or null if customer data hasn't been fetched yet
    return <div>Loading...</div>;
  }

  return (
    <div className="bg-gray-900 text-white p-8">
      <h1 className="text-3xl font-semibold mb-8">
        Editing: {customer.fullname}
      </h1>
      <div className="flex justify-end space-x-4 mb-8">
        <Button className="bg-black hover:bg-gray-700 text-white">
          Save Changes
        </Button>
        <Button className="text-black" variant="outline">
          Cancel
        </Button>
        <Button className="text-black" variant="outline">
          Manage Custom Fields
        </Button>
        <Select>
          <SelectTrigger className="text-black" id="actions">
            <SelectValue placeholder="Actions" />
          </SelectTrigger>
          <SelectContent position="popper">
            <SelectItem value="option1">Option 1</SelectItem>
            <SelectItem value="option2">Option 2</SelectItem>
          </SelectContent>
        </Select>
      </div>
      <div className="grid grid-cols-3 gap-8">
        <div className="col-span-2 bg-gray-800 p-4 rounded-md">
          <div className="flex space-x-4 mb-4">
            <Button className="text-black" variant="ghost">
              Customer Info
            </Button>
            <Button className="text-black" variant="ghost">
              Custom Fields
            </Button>
          </div>
          <h2 className="font-semibold mb-4">BASIC INFO</h2>
          <div className="grid grid-cols-2 gap-4 mb-4">
            <Label className="text-white" htmlFor="first-name">
              First Name
            </Label>
            <Input
              className="text-black"
              id="first-name"
              value={customer.firstname}
              onChange={(e) =>
                setCustomer({ ...customer, firstname: e.target.value })
              }
            />
            <Label className="text-white" htmlFor="last-name">
              Last Name
            </Label>
            <Input
              className="text-black"
              id="last-name"
              value={customer.lastname}
              onChange={(e) =>
                setCustomer({ ...customer, lastname: e.target.value })
              }
            />
            <Label className="text-white" htmlFor="business-name">
              Business Name
            </Label>
            <Input
              className="text-black"
              id="business-name"
              value={customer.business_name}
              onChange={(e) =>
                setCustomer({ ...customer, business_name: e.target.value })
              }
            />
            <Label className="text-white" htmlFor="email">
              Email
            </Label>
            <Input id="email" placeholder="Email" />
          </div>
          <Button className="text-black" variant="outline">
            + Add New Number
          </Button>
          <h2 className="font-semibold mb-4 mt-8">CUSTOMER SETTINGS</h2>
          <div className="grid grid-cols-2 gap-4 mb-4">
            <div className="flex items-center space-x-2">
              <Label className="text-white" htmlFor="store-credit">
                Store Credit
              </Label>
              <Input id="store-credit" placeholder="$0.00" />
              <Button className="text-black" variant="outline">
                Add Store Credit
              </Button>
            </div>
            <Select className="text-black">
              <SelectTrigger id="tax-rate">
                <SelectValue placeholder="Tax Rate" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="0">0%</SelectItem>
                <SelectItem value="5">5%</SelectItem>
              </SelectContent>
            </Select>
            <Switch id="tax-free" />
            <Label className="text-white" htmlFor="tax-free">
              Tax Free
            </Label>
          </div>
          <div className="grid grid-cols-2 gap-4">
            <Select className="text-black">
              <SelectTrigger id="tags">
                <SelectValue placeholder="Click to add Tags" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="tag1">Tag 1</SelectItem>
                <SelectItem value="tag2">Tag 2</SelectItem>
              </SelectContent>
            </Select>
            <Switch id="remote-access" />
            <Label className="text-white" htmlFor="remote-access">
              Enable Remote Access
            </Label>
          </div>
        </div>
        <div className="bg-gray-800 p-4 rounded-md">
          <h2 className="font-semibold mb-4">Address</h2>
          <div className="grid grid-cols-1 gap-4 mb-4">
            <Label className="text-white" htmlFor="address-line-1">
              Address line 1
            </Label>
            <Input
              id="address-line-1"
              placeholder="Street Address or P.O. Box"
            />
            <Label className="text-white" htmlFor="address-line-2">
              Address line 2
            </Label>
            <Input
              id="address-line-2"
              placeholder="apt, suite, unit, building, floor, etc"
            />
            <Label className="text-white" htmlFor="city">
              City
            </Label>
            <Input id="city" placeholder="City" />
            <Label className="text-white" htmlFor="state-country">
              State/Country
            </Label>
            <Input id="state-country" placeholder="State/Country" />
            <Label className="text-white" htmlFor="zip-postal-code">
              Zip/Postal Code
            </Label>
            <Input id="zip-postal-code" placeholder="Zip/Postal Code" />
          </div>
          <Button className="text-black" variant="outline">
            + Add Another Site/Address
          </Button>
          <h2 className="font-semibold mb-4 mt-8">Notifications</h2>
          <div className="grid grid-cols-2 gap-4 mb-4">
            <Switch id="sms-service" />
            <Label className="text-white" htmlFor="sms-service">
              SMS Service Enabled
            </Label>
            <Switch id="billing-emails" />
            <Label className="text-white" htmlFor="billing-emails">
              Receive Billing Emails
            </Label>
            <Switch id="marketing-emails" />
            <Label className="text-white" htmlFor="marketing-emails">
              Receive Marketing Emails
            </Label>
          </div>
          <div className="grid grid-cols-2 gap-4 mb-4">
            <Label className="text-white" htmlFor="email-addresses-1">
              Email Addresses
            </Label>
            <Input
              id="email-addresses-1"
              placeholder="Email Addresses (comma separated)"
            />
            <Label className="text-white" htmlFor="email-addresses-2">
              Email Addresses
            </Label>
            <Input
              id="email-addresses-2"
              placeholder="Email Addresses (comma separated)"
            />
            <Label className="text-white" htmlFor="email-addresses-3">
              Email Addresses
            </Label>
            <Input
              id="email-addresses-3"
              placeholder="Email Addresses (comma separated)"
            />
          </div>
          <div className="grid grid-cols-2 gap-4">
            <Select className="text-black">
              <SelectTrigger id="estimate-template">
                <SelectValue placeholder="Use Default" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="default">Default</SelectItem>
                <SelectItem value="custom">Custom</SelectItem>
              </SelectContent>
            </Select>
            <Select className="text-black">
              <SelectTrigger id="ticket-template">
                <SelectValue placeholder="Use Default" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="default">Default</SelectItem>
                <SelectItem value="custom">Custom</SelectItem>
              </SelectContent>
            </Select>
            <Select className="text-black">
              <SelectTrigger id="invoice-template">
                <SelectValue placeholder="Use Default" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="default">Default</SelectItem>
                <SelectItem value="custom">Custom</SelectItem>
              </SelectContent>
            </Select>
            <Select className="text-black">
              <SelectTrigger id="invoice-terms">
                <SelectValue placeholder="Use Default" />
              </SelectTrigger>
              <SelectContent position="popper">
                <SelectItem value="default">Default</SelectItem>
                <SelectItem value="custom">Custom</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
      </div>

      <footer className="text-sm mt-8">
        Footer - Company Name - Copyright
      </footer>
    </div>
  );
}
